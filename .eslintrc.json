{
  "root": true,
  "plugins": [
    "simple-import-sort",
    "@typescript-eslint",
    "promise",
    "sonarjs",
    "unicorn",
    "testing-library",
    "jest",
    "jest-dom"
  ],
  "extends": [
    "plugin:@typescript-eslint/recommended",
    "plugin:@typescript-eslint/recommended-requiring-type-checking",
    "plugin:promise/recommended",
    "plugin:sonarjs/recommended",
    "plugin:unicorn/recommended",
    "next/core-web-vitals",
    "prettier"
  ],
  "rules": {
    // eslint-plugin-unicorn
    "unicorn/filename-case": [
      "error",
      {
        "cases": {
          "camelCase": true,
          "pascalCase": true,
          "kebabCase": true
        }
      }
    ],
    "unicorn/prevent-abbreviations": "off",
    // eslint-plugin-simple-import-sort
    "simple-import-sort/imports": "error",
    "simple-import-sort/exports": "error",
    "sonarjs/no-duplicate-string": "off"
  },
  "overrides": [
    {
      "files": ["*.js", "*.jsx", "*.ts", "*.tsx"],
      "parserOptions": {
        "project": "./tsconfig.eslint.json"
      },
      "rules": {
        "simple-import-sort/imports": [
          "error",
          {
            "groups": [
              // Packages `react` related packages come first.
              ["^react", "^@?\\w"],
              // Side effect imports.
              ["^\\u0000"],
              // Modules internal packages.
              ["^(@|modules)(/.*|$)"],
              // Component internal packages.
              ["^(@|components)(/.*|$)"],
              // Parent imports. Put `..` last.
              ["^\\.\\.(?!/?$)", "^\\.\\./?$"],
              // Other relative imports. Put same-folder imports and `.` last.
              ["^\\./(?=.*/)(?!/?$)", "^\\.(?!/?$)", "^\\./?$"],
              // Style imports.
              ["^.+\\.?(css)$"]
            ]
          }
        ]
      }
    },
    // Only uses Testing Library lint rules in test files
    {
      "files": [
        "**/__tests__/**/*.[jt]s?(x)",
        "**/?(*.)+(spec|test).[jt]s?(x)"
      ],
      "env": {
        "jest/globals": true
      },
      "extends": [
        "plugin:testing-library/react",
        "plugin:jest-dom/recommended"
      ],
      "rules": {
        "jest/no-disabled-tests": "warn",
        "jest/no-focused-tests": "error",
        "jest/no-identical-title": "error",
        "jest/prefer-to-have-length": "warn",
        "jest/valid-expect": "error"
      }
    }
  ],
  "ignorePatterns": ["syncStorage.js"]
}
